# Generated by Django 4.1.2 on 2023-05-30 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0034_remove_event_organizer_event_organizers'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=50, unique=True, verbose_name='Color')),
                ('color_hex', models.CharField(max_length=50, verbose_name='Color Hex')),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
            },
        ),
        migrations.CreateModel(
            name='PlayerNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(unique=True, verbose_name='Number')),
            ],
            options={
                'verbose_name': 'Player Number',
                'verbose_name_plural': 'Player Numbers',
            },
        ),
        migrations.AlterUniqueTogether(
            name='teamplayer',
            unique_together={('player', 'team')},
        ),
        migrations.AddField(
            model_name='team',
            name='color',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams', to='events.color'),
        ),
        migrations.AddField(
            model_name='teamplayer',
            name='number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_players', to='events.playernumber'),
        ),
        migrations.AlterUniqueTogether(
            name='teamplayer',
            unique_together={('player', 'team'), ('number', 'team')},
        ),
    ]
